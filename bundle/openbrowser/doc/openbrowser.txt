*openbrowser.txt* *openbrowser* *open-browser*

Author:
  tyru <tyru.exe@gmail.com>
Version: 0.0.2
License:
" NEW BSD LICENSE {{{
"   Copyright (c) 2009, tyru
"   All rights reserved.
"
"   Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
"
"       * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
"       * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
"       * Neither the name of the tyru nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
"
"   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
" }}}

==============================================================================
CONTENTS						*openbrowser-contents*

Introduction		|openbrowser-introduction|
Interface			|openbrowser-interface|
  Keymappings		|openbrowser-keymappings|
  Variables			|openbrowser-variables|
  Commands			|openbrowser-commands|
Library to enhance open-browser		|openbrowser-library|
Platform dependent values		|openbrowser-platform-dependent|
Changelog			|openbrowser-changelog|


==============================================================================
INTRODUCTION						*openbrowser-introduction* {{{

>
	nmap map-you-like <Plug>(openbrowser-open)
	vmap map-you-like <Plug>(openbrowser-open)

	" In command-line
	:OpenBrowser http://google.com/
<

}}}
==============================================================================
INTERFACE				*openbrowser-interface* {{{
------------------------------------------------------------------------------
KEYMAPPINGS					*openbrowser-keymappings* {{{

n <Plug>(openbrowser-open)				|<Plug>(openbrowser-open)|
	Open current <cfile> text with |:OpenBrowser|.

v <Plug>(openbrowser-open)				|<Plug>(openbrowser-open)|
	Open selected text with |:OpenBrowser|.

}}}
------------------------------------------------------------------------------
VARIABLES					*openbrowser-variables* {{{

g:openbrowser_open_commands			*g:openbrowser_open_commands*
								(default: Platform dependent)
	See |openbrowser-platform-dependent|.

g:openbrowser_open_rules			*g:openbrowser_open_rules*
								(default: Platform dependent)
	See |openbrowser-platform-dependent|.

g:openbrowser_fix_schemes			*g:openbrowser_fix_schemes*
								(default: {"ttp": "http"})
	You can use this variable if you installed |urilib|.
	See |openbrowser-library|.

	If this value is default,
	If you execute |<Plug>(openbrowser-open)| on URI like: >
		ttp://google.com/
<	It is fixed to: >
		http://google.com/
<
	I think |g:openbrowser_fix_hosts| and
	|g:openbrowser_fix_paths| are not so helpful.
	But |g:openbrowser_fix_schemes| might be helpful particularly on Japan.
	Because "ttp" is used as like "http" on particular net community.
	(I know it's desecration of standard
	but I'm particular member and this is my plugin :) )

	It is not interesting for almost people
	and default value of |g:openbrowser_fix_schemes| would not
	bother you.

g:openbrowser_fix_hosts				*g:openbrowser_fix_hosts*
								(default: {})
	You can use this variable if you installed |urilib|.
	See |openbrowser-library|.

	If this value is: >
	{'google.com': 'yahoo.com'}
<
	If you execute |<Plug>(openbrowser-open)| on URI like: >
		http://google.com/
<	It is fixed to: >
		http://yahoo.com/
<
g:openbrowser_fix_paths				*g:openbrowser_fix_paths*
								(default: {})
	You can use this variable if you installed |urilib|.
	See |openbrowser-library|.

	If this value is: >
	{'/google': '/tyru'}
<
	If you execute |<Plug>(openbrowser-open)| on URI like: >
		http://twitter.com/google
<	It is fixed to: >
		http://twitter.com/tyru
<
	Note that this works on the URL like: >
		http://yahoo.com/google
<	It is fixed to: >
		http://yahoo.com/tyru
<
g:openbrowser_isfname				*g:openbrowser_isfname*
								(default: Same as 'isfname')
	|<Plug>(openbrowser-open)| opens <cfile> text in normal mode.
	This variable temporarily changes 'isfname' option value at that time.
}}}
------------------------------------------------------------------------------
COMMANDS					*openbrowser-commands* {{{

OpenBrowser {uri}
	Open URI with your favorite browser.

}}}
}}}
==============================================================================
LIBRARY TO ENHANCE OPEN-BROWSER		*openbrowser-library* {{{

urilib.vim: http://github.com/tyru/urilib.vim

If you installed |urilib|, you can use these variables:
- |g:openbrowser_fix_schemes|
- |g:openbrowser_fix_hosts|
- |g:openbrowser_fix_paths|

}}}
==============================================================================
PLATFORM DEPENDENT VALUES		*openbrowser-platform-dependent* {{{

Cygwin:
	Match if: `has("win32unix")` is true.

	g:openbrowser_open_commands g:openbrowser_open_rules ~
	["cygstart"]				{"cygstart": "{browser} {shellescape(uri)}"}

Mac OS X:
	Match if: `has("macunix")` is true.

	g:openbrowser_open_commands g:openbrowser_open_rules ~
	["open"]					{"open": "{browser} {shellescape(uri)}"}

MS Windows:
	Match if: `has("win16") || has("win32") || has("win64")` is true.

	Note that "start" is not external program,
	it is cmd.exe builtin command.
	But you don't have to care it is not executable,
	because open-browser knows "start" is builtin command.

	g:openbrowser_open_commands g:openbrowser_open_rules ~
	["start"]					{"start": "&shell &shellcmdflag {browser} {uri}"}

Unix like environment:
	Match if:
	it does not match above any environment,
	and `has("unix")` is true,
	This is your platform.

	|g:openbrowser_open_commands|
	['xdg-open', 'x-www-browser', 'firefox', 'w3m']

	|g:openbrowser_open_rules| >
	{
	\   'xdg-open':      '{browser} {shellescape(uri)}',
	\   'x-www-browser': '{browser} {shellescape(uri)}',
	\   'firefox':       '{browser} {shellescape(uri)}',
	\   'w3m':           '{browser} {shellescape(uri)}',
	\}
<

}}}
==============================================================================
CHANGELOG						*openbrowser-changelog* {{{

0.0.0:
- Initial upload

0.0.1:
- Support opening file path.
- Fix minor bugs.

0.0.2:
- Rename |g:openbrowser_isfname| to |g:openbrowser_iskeyword|.
variable |g:openbrowser_isfname| is still available for
backward compatibility.
- Specialize |g:openbrowser_iskeyword| value to get URI in <cword>.
- More readable messages.

}}}
==============================================================================
vim:tw=78:fo=tcq2mM:ts=4:ft=help:norl:noet:fdm=marker:fen
