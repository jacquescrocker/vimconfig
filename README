My MacVIM Setup for the Textmate Convert

to use:
- clone this repo somewhere (I have it at ~/Vim/config)
    
    mkdir ~/Vim
    git clone git://github.com/railsjedi/vimconfig.git ~/Vim/config

- symlink the vim files to where you cloned it
    
    ln -s $HOME/Vim/config ~/.vim
    ln -s $HOME/Vim/config/vimrc ~/.vimrc
    ln -s $HOME/Vim/config/gvimrc ~/.gvimrc

- clone my awesome snippet repo (or fork it and clone your own) 

    git://github.com/railsjedi/snipmate-snippets.git ~/Vim/snippets
    ln -s $HOME/Vim/snippets ~/Vim/config/snippets


--------

What I have configured:
- Pathogen: for easy adding/removing/updating of plugins (they go in the ~/.vim/bundle/ directory)

- NerdTree: file manager

- SnipMate: for textmate style snippets

- tComment: comment/uncommenting. use command-/ to toggle line comments

- VividChalk: great looking color scheme (looks exactly like VibrantInk on textmate)

- Surround: tools to easily surround/modify wrapped blocks of code

- vim-cucumber: helps vim work better with Cucumber

- vim-rails: helps vim work better with Rails

- vim-haml: helps vim work better with Haml

- vim-liquid: helps vim work better with the Liquid markup language

- ack.vim: for project wide searching

- fugitive: some handy git integration

- vim-git: latest runtime git files

- vim-ruby: latest ruby configuration files

- buffer-explorer: tools to easily navigate the open buffers

- endwise: automatically adds end statements to common ruby blocks

- jquery: adds some minor syntax highlighting updates for jQuery scripts

- abolish: no idea what this does

- repeat: no idea what this does

- unimpaired: no idea what this does

TODO:

- Figure out why NERDCommenter is so fucking retarded....
why doesn't it have an option to left align the comments when toggling comments on/off

- map these textmate commands to vim equivalents:

CONTROL-SHIFT-H: this should "tidy" the document. 
primarily use this for reformating javascript or html files

CONTROL-SHIFT-V: this should "validate" the document
html docs should validate using w3c markup validation service
javascript files should validate using jslint
ruby files should validate using ruby syntax parser

COMMAND-R: this should "run" the file
rspec: run test using rspec command
cucumber: run cucumber test
ruby: run file
html: ?

COMMAND-SHIFT-R: should run a focused unit test
rspec: run a specific test
cucumber: run a specific scenario

CONTROL-H: should look up documentation on the current word (or current highlighted word)

